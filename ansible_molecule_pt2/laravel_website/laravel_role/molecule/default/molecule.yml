---
# scenario:
#   test_sequence:
#     - dependency
#     - lint
#     - cleanup
#     - destroy
#     - syntax
#     - create
#     - prepare
#     - converge
#     - idempotence
#     - side_effect
#     - verify
#     - cleanup
#     - destroy
dependency:
  name: galaxy
  options:
    ignore-certs: True
    ignore-errors: True
    role-file: molecule/requirements.yml
    # requirements-file: molecule/requirements.yml
driver:
  name: docker
platforms:
  - name: site
    image: "geerlingguy/docker-ubuntu2204-ansible:latest"
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
    privileged: true
    pre_build_image: true
    published_ports:
      - 0.0.0.0:8080:80/tcp
    networks:
      - name: "laravel"
  - name: mysql
    image: "geerlingguy/docker-${MOLECULE_DISTRO:-centos7}-ansible:latest"
    command: ${MOLECULE_DOCKER_COMMAND:-""}
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
    privileged: true
    pre_build_image: true
    published_ports:
      - 0.0.0.0:3306:3306/tcp
    networks:
      - name: "laravel"
provisioner:
  name: ansible
  env:
    DB_CONNECTION: mysql
    DB_HOST: mysql
    DB_PORT: 3306
    DB_DATABASE: blog
    DB_USERNAME: molecule
    DB_PASSWORD: moleculepass
verifier:
  name: testinfra
lint: |
  set -e
  yamllint .
  ansible-lint
  flake8